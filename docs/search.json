[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Météo Montpellier",
    "section": "",
    "text": "Dérouler le code\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport requests\nimport datetime\nimport pooch\nimport PIL as Image\nimport statistics\nfrom dateutil.relativedelta import relativedelta\nstart_date = datetime.datetime.now() - relativedelta(days=3)\nend_date = start_date + relativedelta(days=6)\n\ndebut=\"\"\nif (start_date.month &lt;10 and start_date.day &lt;10):\n    debut = f\"{start_date.year}-0{start_date.month}-0{start_date.day}\"\nelif start_date.day &lt;10:\n    debut = f\"{start_date.year}-{start_date.month}-0{start_date.day}\"\nelif start_date.month &lt;10:\n    debut = f\"{start_date.year}-0{start_date.month}-{start_date.day}\"\nelse:\n    debut = f\"{start_date.year}-{start_date.month}-{start_date.day}\"\n\n\nfin=\"\"\nif (end_date.month &lt;10 and end_date.day &lt;10):\n    fin = f\"{end_date.year}-0{end_date.month}-0{end_date.day}\"\nelif end_date.day &lt;10:\n    fin = f\"{end_date.year}-{end_date.month}-0{end_date.day}\"\nelif start_date.month &lt;10:\n    fin = f\"{end_date.year}-0{end_date.month}-{end_date.day}\"\nelse:\n    fin = f\"{end_date.year}-{end_date.month}-{end_date.day}\"\n\nurl = f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6&longitude=3.8833&hourly=temperature_2m,relativehumidity_2m,apparent_temperature,precipitation,rain,snowfall,weathercode,cloudcover,windspeed_10m,windspeed_20m,temperature_20m&daily=weathercode,uv_index_max&timezone=Europe%2FLondon&start_date={debut}&end_date={fin}\"\n\n\nresponse = requests.get(url)\ndata = response.json()\ndegres=data['hourly']['temperature_2m']\nressenti=data['hourly']['apparent_temperature']\nhumidite=data['hourly']['relativehumidity_2m']\npluie=data['hourly']['precipitation']\nneige=data['hourly']['snowfall']\nvent=data['hourly']['windspeed_10m']\ncodeimage=data['hourly']['weathercode']\ncodeimagetot=data['daily']['weathercode']\n\n\n\ntabdegres = np.zeros((7,24))\n\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabdegres[i,j]= degres[k]\n        k+=1\nmintemp=np.zeros(7)\nmaxtemp=np.zeros(7)\nfor i in range(7):\n    mintemp[i]=min(tabdegres[i])\n    maxtemp[i]=max(tabdegres[i])\n\ntabcode = np.zeros((7,24))\nmedcode=np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabcode[i,j]= codeimage[k]\n        k+=1\n\nfor i in range(7): \n    medcode[i]=max(tabcode[i])\n    #medcode[i]=statistics.median(tabcode[i])\n\ntabvent = np.zeros((7,24))\nmaxvent = np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabvent[i,j]= vent[k]\n        k+=1\n\nfor i in range(7): \n    maxvent[i]=max(tabvent[i])\n\ntabpluie = np.zeros((7,24))\nsumpluie = np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabpluie[i,j]= pluie[k]\n        k+=1\n\nfor i in range(7): \n    sumpluie[i]=sum(tabpluie[i])\n\ndef inttoday(i):\n    if ((datetime.datetime.now().weekday() + i)%7 ==0):\n        return 'Lundi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==1):\n        return 'Mardi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==2):\n        return 'Mercredi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==3):\n        return 'Jeudi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==4):\n        return 'Vendredi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==5):\n        return 'Samedi'\n    else:\n        return 'Dimanche'\n\ndef date(i):\n    date=datetime.datetime.now() + relativedelta(days=i)\n    return f\"{date.day}-{date.month}\"\n#| label: tbl-planets\n#| tbl-cap: Astronomical object\ndef imgcode(i):\n    if (medcode[i]==0):\n        return 'iconsmeteo/Sun-thin.svg'\n    elif (medcode[i]==1 or medcode[i]==2):\n        return 'iconsmeteo/PartlySunny-thin.svg'\n    elif (medcode[i]==3):\n        return 'iconsmeteo/Cloud-thin.svg'\n    elif (45&lt;=medcode[i]&lt;=57):\n        return 'iconsmeteo/Haze-thin.svg'\n    elif (61&lt;=medcode[i]&lt;=67 or 80&lt;=medcode[i]&lt;=82):\n        return 'iconsmeteo/Rain-thin.svg'\n    elif (71&lt;=medcode[i]&lt;=77 or 85&lt;=medcode[i]&lt;=86):\n        return 'iconsmeteo/Snow-thin.svg'\n    elif (95&lt;=medcode[i]&lt;=99):\n        return 'iconsmeteo/Storm-thin.svg'\n\n\ndef imgcodeday(i):\n    if (codeimagetot[i]==0):\n        return 'iconsmeteo/Sun-thin.svg'\n    elif (codeimagetot[i]==1 or codeimagetot[i]==2):\n        return 'iconsmeteo/PartlySunny-thin.svg'\n    elif (codeimagetot[i]==3):\n        return 'iconsmeteo/Cloud-thin.svg'\n    elif (45&lt;=codeimagetot[i]&lt;=57):\n        return 'iconsmeteo/Haze-thin.svg'\n    elif (61&lt;=codeimagetot[i]&lt;=67 or 80&lt;=codeimagetot&lt;=82):\n        return 'iconsmeteo/Rain-thin.svg'\n    elif (71&lt;=codeimagetot&lt;=77 or 85&lt;=codeimagetot&lt;=86):\n        return 'iconsmeteo/Snow-thin.svg'\n    elif (95&lt;=codeimagetot&lt;=99):\n        return 'iconsmeteo/Storm-thin.svg'\n\ndef couleur(temp):\n    if (temp&lt;=0):\n        return 'rgb(102, 183, 213,0.5)'\n    if (0&lt;temp&lt;=5):\n        return 'rgb(85, 215, 195,0.5)'\n    if (5&lt;temp&lt;=10):\n        return 'rgb(65, 220, 119,0.5)'\n    if (10&lt;temp&lt;=15):\n        return 'rgb(82, 226, 38,0.5)'\n    if (15&lt;temp&lt;=20):\n        return 'rgb(155, 227, 22,0.5)'\n    if (20&lt;temp&lt;=25):\n        return 'rgb(216, 186, 12,0.5)'\n    if (25&lt;temp&lt;=30):\n        return 'rgb(211, 113, 7,0.5)'\n    if (30&lt;temp&lt;=35):\n        return 'rgb(204, 61, 4,0.5)'\n    if (35&lt;temp):\n        return 'rgb(201, 25, 2,0.5)'\nfrom IPython.display import Markdown\nfrom IPython.display import HTML\nfrom tabulate import tabulate\nres=f\"\"\"\n&lt;table class= \"table1-style\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;  \n        &lt;th  style=\"border-top-left-radius : 20px 20px\"&gt; Jours &lt;/th&gt;\n        &lt;th&gt;  {inttoday(-2)} &lt;br&gt; &lt;small&gt; {date(-2)} &lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  Hier &lt;br&gt; &lt;small&gt;{date(-1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th style=\"border-top:3px solid rgb(85, 215, 195,0.5);border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt;  Aujourd'hui &lt;br&gt; &lt;small&gt;{date(0)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  Demain &lt;br&gt; &lt;small&gt;{date(1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {inttoday(2)} &lt;br&gt; &lt;small&gt;{date(2)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {inttoday(3)} &lt;br&gt; &lt;small&gt;{date(3)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th  style=\"border-top-right-radius : 20px 20px\" &gt;  {inttoday(4)} &lt;br&gt; &lt;small&gt;{date(4)}&lt;/small&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  Pictogramme&lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(0)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(1)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td style=\"border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; &lt;img src={imgcodeday(2)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(3)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(4)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(5)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(6)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  Température maximale&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[0])}; font-weight: bold;\" &gt; {maxtemp[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[1])};font-weight: bold;\" &gt; {maxtemp[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[2])};font-weight: bold;border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\" &gt; {maxtemp[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[3])};font-weight: bold;\" &gt; {maxtemp[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[4])};font-weight: bold;\" &gt; {maxtemp[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[5])};font-weight: bold;\" &gt; {maxtemp[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[6])};font-weight: bold;\" &gt; {maxtemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr &gt; \n        &lt;td&gt;  Température minimale&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[0])};font-weight: bold;\" &gt; {mintemp[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[1])};font-weight: bold;\" &gt; {mintemp[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[2])};font-weight: bold;border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\" &gt; {mintemp[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[3])};font-weight: bold;\" &gt; {mintemp[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[4])};font-weight: bold;\" &gt; {mintemp[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[5])};font-weight: bold;\" &gt; {mintemp[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[6])};font-weight: bold;\" &gt; {mintemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Vitesse de vent maximale &lt;/td&gt;\n        &lt;td&gt; {maxvent[0]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[1]}km/h &lt;/td&gt;\n        &lt;td style=\"border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; {maxvent[2]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[3]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[4]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[5]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[6]}km/h &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td style=\"border-bottom-left-radius : 20px 20px\"&gt; Précipitations &lt;/td&gt;\n        &lt;td&gt; {sumpluie[0]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[1]}mm &lt;/td&gt;\n        &lt;td style=\"border-bottom:3px solid rgb(85, 215, 195,0.5);border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; {sumpluie[2]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[3]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[4]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[5]}mm &lt;/td&gt;\n        &lt;td style=\"border-bottom-right-radius : 20px 20px\"&gt; {sumpluie[6]}mm &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n\n&lt;/table&gt;\n\"\"\"\ndisplay(HTML(res))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJours\nDimanche\n29-10\nHier\n30-10\nAujourd'hui\n31-10\nDemain\n1-11\nJeudi\n2-11\nVendredi\n3-11\nSamedi\n4-11\n\n\n\n\nPictogramme\n\n\n\n\n\n\n\n\n\nTempérature maximale\n20.8°C\n21.8°C\n20.8°C\n19.2°C\n20.1°C\n15.9°C\n11.4°C\n\n\nTempérature minimale\n9.3°C\n15.9°C\n13.8°C\n10.5°C\n11.5°C\n10.3°C\n6.9°C\n\n\nVitesse de vent maximale\n11.6km/h\n27.8km/h\n28.6km/h\n22.3km/h\n17.3km/h\n27.6km/h\n23.7km/h\n\n\nPrécipitations\n0.0mm\n0.0mm\n3.9mm\n0.0mm\n0.0mm\n4.7mm\n2.2mm"
  }
]