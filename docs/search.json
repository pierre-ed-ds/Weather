[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Météo Montpellier",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nimport requests\nimport datetime\nimport pooch\nfrom dateutil.relativedelta import relativedelta\nimport zipfile\nimport pandas as pd\nstart_date = datetime.datetime.now() - relativedelta(days=3)\nend_date = start_date + relativedelta(days=4)\nprint(\"lol\")\ndebut=\"\"\nif (start_date.month &lt;10 and start_date.day &lt;10):\n    debut = f\"{start_date.year}-0{start_date.month}-0{start_date.day}\"\nelif start_date.day &lt;10:\n    debut = f\"{start_date.year}-{start_date.month}-0{start_date.day}\"\nelif start_date.month &lt;10:\n    debut = f\"{start_date.year}-0{start_date.month}-{start_date.day}\"\nelse:\n    debut = f\"{start_date.year}-{start_date.month}-{start_date.day}\"\n\n\nprint(debut)\nfin=\"\"\nif (end_date.month &lt;10 and end_date.day &lt;10):\n    fin = f\"{end_date.year}-0{end_date.month}-0{end_date.day}\"\nelif end_date.day &lt;10:\n    fin = f\"{end_date.year}-{end_date.month}-0{end_date.day}\"\nelif start_date.month &lt;10:\n    fin = f\"{end_date.year}-0{end_date.month}-{end_date.day}\"\nelse:\n    fin = f\"{end_date.year}-{end_date.month}-{end_date.day}\"\nprint(fin)\ndonnees = pooch.retrieve(f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6&longitude=3.8833&hourly=temperature_2m&start_date={debut}&end_date={fin}\",known_hash=None)\n#,relativehumidity_2m,apparent_temperature,precipitation,rain,snowfall,windspeed_10m,windspeed_20m,temperature_20m\nmeteo = pd.read_csv(donnees)\nprint(meteo)\n\nlol\n2023-10-26\n2023-10-30\nEmpty DataFrame\nColumns: [{\"latitude\":43.6, longitude:3.88, generationtime_ms:0.12099742889404297, utc_offset_seconds:0, timezone:\"GMT\", timezone_abbreviation:\"GMT\", elevation:36.0, hourly_units:{\"time\":\"iso8601\", temperature_2m:\"°C\"}, hourly:{\"time\":[\"2023-10-26T00:00\", 2023-10-26T01:00, 2023-10-26T02:00, 2023-10-26T03:00, 2023-10-26T04:00, 2023-10-26T05:00, 2023-10-26T06:00, 2023-10-26T07:00, 2023-10-26T08:00, 2023-10-26T09:00, 2023-10-26T10:00, 2023-10-26T11:00, 2023-10-26T12:00, 2023-10-26T13:00, 2023-10-26T14:00, 2023-10-26T15:00, 2023-10-26T16:00, 2023-10-26T17:00, 2023-10-26T18:00, 2023-10-26T19:00, 2023-10-26T20:00, 2023-10-26T21:00, 2023-10-26T22:00, 2023-10-26T23:00, 2023-10-27T00:00, 2023-10-27T01:00, 2023-10-27T02:00, 2023-10-27T03:00, 2023-10-27T04:00, 2023-10-27T05:00, 2023-10-27T06:00, 2023-10-27T07:00, 2023-10-27T08:00, 2023-10-27T09:00, 2023-10-27T10:00, 2023-10-27T11:00, 2023-10-27T12:00, 2023-10-27T13:00, 2023-10-27T14:00, 2023-10-27T15:00, 2023-10-27T16:00, 2023-10-27T17:00, 2023-10-27T18:00, 2023-10-27T19:00, 2023-10-27T20:00, 2023-10-27T21:00, 2023-10-27T22:00, 2023-10-27T23:00, 2023-10-28T00:00, 2023-10-28T01:00, 2023-10-28T02:00, 2023-10-28T03:00, 2023-10-28T04:00, 2023-10-28T05:00, 2023-10-28T06:00, 2023-10-28T07:00, 2023-10-28T08:00, 2023-10-28T09:00, 2023-10-28T10:00, 2023-10-28T11:00, 2023-10-28T12:00, 2023-10-28T13:00, 2023-10-28T14:00, 2023-10-28T15:00, 2023-10-28T16:00, 2023-10-28T17:00, 2023-10-28T18:00, 2023-10-28T19:00, 2023-10-28T20:00, 2023-10-28T21:00, 2023-10-28T22:00, 2023-10-28T23:00, 2023-10-29T00:00, 2023-10-29T01:00, 2023-10-29T02:00, 2023-10-29T03:00, 2023-10-29T04:00, 2023-10-29T05:00, 2023-10-29T06:00, 2023-10-29T07:00, 2023-10-29T08:00, 2023-10-29T09:00, 2023-10-29T10:00, 2023-10-29T11:00, 2023-10-29T12:00, 2023-10-29T13:00, 2023-10-29T14:00, 2023-10-29T15:00, 2023-10-29T16:00, 2023-10-29T17:00, 2023-10-29T18:00, ...]\nIndex: []\n\n[0 rows x 249 columns]\n\nFigure 1: ?(caption)"
  }
]