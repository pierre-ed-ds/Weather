[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Météo Montpellier",
    "section": "",
    "text": "Dérouler le code\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport requests\nimport datetime\nimport pooch\nimport PIL as Image\nimport statistics\nfrom dateutil.relativedelta import relativedelta\nstart_date = datetime.datetime.now() - relativedelta(days=3)\nend_date = start_date + relativedelta(days=6)\n\ndebut=\"\"\nif (start_date.month &lt;10 and start_date.day &lt;10):\n    debut = f\"{start_date.year}-0{start_date.month}-0{start_date.day}\"\nelif start_date.day &lt;10:\n    debut = f\"{start_date.year}-{start_date.month}-0{start_date.day}\"\nelif start_date.month &lt;10:\n    debut = f\"{start_date.year}-0{start_date.month}-{start_date.day}\"\nelse:\n    debut = f\"{start_date.year}-{start_date.month}-{start_date.day}\"\n\n\nfin=\"\"\nif (end_date.month &lt;10 and end_date.day &lt;10):\n    fin = f\"{end_date.year}-0{end_date.month}-0{end_date.day}\"\nelif end_date.day &lt;10:\n    fin = f\"{end_date.year}-{end_date.month}-0{end_date.day}\"\nelif start_date.month &lt;10:\n    fin = f\"{end_date.year}-0{end_date.month}-{end_date.day}\"\nelse:\n    fin = f\"{end_date.year}-{end_date.month}-{end_date.day}\"\n\nurl = f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6&longitude=3.8833&hourly=temperature_2m,relativehumidity_2m,apparent_temperature,precipitation,rain,snowfall,weathercode,cloudcover,windspeed_10m,windspeed_20m,temperature_20m&start_date={debut}&end_date={fin}\"\n\n\nresponse = requests.get(url)\ndata = response.json()\ndegres=data['hourly']['temperature_2m']\nressenti=data['hourly']['apparent_temperature']\nhumidite=data['hourly']['relativehumidity_2m']\npluie=data['hourly']['precipitation']\nneige=data['hourly']['snowfall']\nvent=data['hourly']['windspeed_10m']\ncodeimage=data['hourly']['weathercode']\n\n\n\ntabdegres = np.zeros((7,24))\n\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabdegres[i,j]= degres[k]\n        k+=1\nmintemp=np.zeros(7)\nmaxtemp=np.zeros(7)\nfor i in range(7):\n    mintemp[i]=min(tabdegres[i])\n    maxtemp[i]=max(tabdegres[i])\n\ntabcode = np.zeros((7,24))\nmedcode=np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabcode[i,j]= codeimage[k]\n        k+=1\n\nfor i in range(7): \n    medcode[i]=max(tabcode[i])\n    #medcode[i]=statistics.median(tabcode[i])\n\ntabvent = np.zeros((7,24))\nmaxvent = np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabvent[i,j]= vent[k]\n        k+=1\n\nfor i in range(7): \n    maxvent[i]=max(tabvent[i])\n\ntabpluie = np.zeros((7,24))\nsumpluie = np.zeros(7)\nk=0\nfor i in range(7):\n    for j in range(24):\n        tabpluie[i,j]= pluie[k]\n        k+=1\n\nfor i in range(7): \n    sumpluie[i]=sum(tabpluie[i])\n\ndef inttoday(i):\n    if ((datetime.datetime.now().weekday() + i)%7 ==0):\n        return 'Lundi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==1):\n        return 'Mardi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==2):\n        return 'Mercredi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==3):\n        return 'Jeudi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==4):\n        return 'Vendredi'\n    elif ((datetime.datetime.now().weekday()+i)%7 ==5):\n        return 'Samedi'\n    else:\n        return 'Dimanche'\n#| label: tbl-planets\n#| tbl-cap: Astronomical object\ndef imgcode(i):\n    if (medcode[i]==0):\n        return 'iconsmeteo/Sun-thin.svg'\n    elif (medcode[i]==1 or medcode[i]==2):\n        return 'iconsmeteo/PartlySunny-thin.svg'\n    elif (medcode[i]==3):\n        return 'iconsmeteo/Cloud-thin.svg'\n    elif (45&lt;=medcode[i]&lt;=57):\n        return 'iconsmeteo/Haze-thin.svg'\n    elif (61&lt;=medcode[i]&lt;=67 or 80&lt;=medcode[i]&lt;=82):\n        return 'iconsmeteo/Rain-thin.svg'\n    elif (71&lt;=medcode[i]&lt;=77 or 85&lt;=medcode[i]&lt;=86):\n        return 'iconsmeteo/Snow-thin.svg'\n    elif (95&lt;=medcode[i]&lt;=99):\n        return 'iconsmeteo/Storm-thin.svg'\n\nfrom IPython.display import Markdown\nfrom IPython.display import HTML\nfrom tabulate import tabulate\nres=f\"\"\"\n&lt;table class= \"table1-style\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;  \n        &lt;th&gt; Jours &lt;/th&gt;\n        &lt;th&gt;  {inttoday(-2)}&lt;/th&gt;\n        &lt;th&gt;  Hier&lt;/th&gt;\n        &lt;th&gt;  Aujourd'hui&lt;/th&gt;\n        &lt;th&gt;  Demain&lt;/th&gt;\n        &lt;th&gt;  {inttoday(2)}&lt;/th&gt;\n        &lt;th&gt;  {inttoday(3)}&lt;/th&gt;\n        &lt;th&gt;  {inttoday(4)}&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  icone&lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(0)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(1)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(2)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(3)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(4)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(5)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcode(6)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  température maximale&lt;/td&gt;\n        &lt;td&gt; {maxtemp[0]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[1]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[2]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[3]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[4]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[5]}°C &lt;/td&gt;\n        &lt;td&gt; {maxtemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  température minimale&lt;/td&gt;\n        &lt;td&gt; {mintemp[0]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[1]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[2]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[3]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[4]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[5]}°C &lt;/td&gt;\n        &lt;td&gt; {mintemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Vitesse de vent maximale &lt;/td&gt;\n        &lt;td&gt; {maxvent[0]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[1]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[2]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[3]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[4]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[5]}km/h &lt;/td&gt;\n        &lt;td&gt; {maxvent[6]}km/h &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Précipitations &lt;/td&gt;\n        &lt;td&gt; {sumpluie[0]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[1]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[2]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[3]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[4]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[5]}mm &lt;/td&gt;\n        &lt;td&gt; {sumpluie[6]}mm &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n\n&lt;/table&gt;\n\"\"\"\ndisplay(HTML(res))\n\n\n\n\n\n\n\nJours\nSamedi\nHier\nAujourd'hui\nDemain\nMercredi\nJeudi\nVendredi\n\n\n\n\nicone\n\n\n\n\n\n\n\n\n\ntempérature maximale\n22.0°C\n20.8°C\n21.8°C\n20.8°C\n18.9°C\n16.8°C\n15.1°C\n\n\ntempérature minimale\n12.5°C\n9.3°C\n15.9°C\n14.0°C\n12.4°C\n10.6°C\n9.8°C\n\n\nVitesse de vent maximale\n24.9km/h\n11.6km/h\n27.8km/h\n28.6km/h\n17.2km/h\n22.4km/h\n27.0km/h\n\n\nPrécipitations\n0.0mm\n0.0mm\n0.0mm\n3.4mm\n0.0mm\n0.0mm\n3.6mm"
  }
]