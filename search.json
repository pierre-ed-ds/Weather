[
  {
    "objectID": "plus.html",
    "href": "plus.html",
    "title": "Météo détaillée du jour",
    "section": "",
    "text": "Dérouler le code\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport requests\nimport datetime\nimport pooch\nimport PIL as Image\nimport statistics\nfrom dateutil.relativedelta import relativedelta\n\n\ndef inttoday(i):\n    \"\"\"\n    fonction permettant d'obtenir le nom du jour des jours de la semaines automatiquement, correspond à la première ligne du tableau.\n    \"\"\"\n    if (datetime.datetime.now().weekday() + i) % 7 == 0:\n        return \"Lundi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 1:\n        return \"Mardi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 2:\n        return \"Mercredi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 3:\n        return \"Jeudi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 4:\n        return \"Vendredi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 5:\n        return \"Samedi\"\n    else:\n        return \"Dimanche\"\n\n\ndef date(i):\n    \"\"\"\n    Retourne une chaine de caractères correspondant au jour i, i étant l'offset de jour par rapport au présent.\n    \"\"\"\n    date = datetime.datetime.now() + relativedelta(days=i)\n    return f\"{date.day}-{date.month}\"\n\n\n# copie de l'URL du site open-meteo avec les differents critères qui nous interessent\nurl = f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6109&longitude=3.8763&hourly=temperature_2m,relativehumidity_2m,apparent_temperature,precipitation,weathercode,cloudcover,windspeed_10m&daily=sunrise,sunset&timezone=Europe%2FLondon&forecast_days=1\"\n\n# récuperation des données\nresponse = requests.get(url)\ndata = response.json()\n# initialisation des tableaux de données que nous allons utiliser\ndegres = data[\"hourly\"][\"temperature_2m\"]\nressenti = data[\"hourly\"][\"apparent_temperature\"]\nhumidite = data[\"hourly\"][\"relativehumidity_2m\"]\ncloudcover = data[\"hourly\"][\"cloudcover\"]\npluie = data[\"hourly\"][\"precipitation\"]\nvent = data[\"hourly\"][\"windspeed_10m\"]\ncodeimage = data[\"hourly\"][\"weathercode\"]\n\n\nday = int(\n    datetime.datetime.strptime(data[\"daily\"][\"sunrise\"][0], \"%Y-%m-%dT%H:%M\").strftime(\n        \"%H\"\n    )\n)\nnight = int(\n    datetime.datetime.strptime(data[\"daily\"][\"sunset\"][0], \"%Y-%m-%dT%H:%M\").strftime(\n        \"%H\"\n    )\n)\n\n\ndef date(i):\n    \"\"\"\n    Retourne une chaine de caractères correspondant au jour i, i étant l'offset de jour par rapport au présent.\n    \"\"\"\n    date = datetime.datetime.now() + relativedelta(days=i)\n    return f\"{date.day}-{date.month}\"\n\n\ndef imgcodehour(i):\n    \"\"\"\n    Association de chaques codes WBO à un pictogramme le correspondant. Retourne le chemin d'accès au pictogramme par une chaine de caractères. Version day.\n    \"\"\"\n    match codeimage[i]:\n        case 0:\n            return \"iconsmeteo/wi-day-sunny.svg\"\n        case 1:\n            return \"iconsmeteo/wi-day-sunny-overcast.svg\"\n        case 2:\n            return \"iconsmeteo/wi-day-cloudy.svg\"\n        case 3:\n            return \"iconsmeteo/wi-cloud.svg\"\n        case 45 | 48:\n            return \"iconsmeteo/wi-fog.svg\"\n        case 51 | 53 | 55 | 56 | 57:\n            return \"iconsmeteo/wi-sprinkle.svg\"\n        case 61 | 81 | 82:\n            return \"iconsmeteo/wi-showers.svg\"\n        case 63:\n            return \"iconsmeteo/wi-rain-wind.svg\"\n        case 65 | 66 | 67:\n            return \"iconsmeteo/wi-rain.svg\"\n        case 71 | 73 | 75 | 85 | 86:\n            return \"iconsmeteo/wi-snow.svg\"\n        case 95 | 96:\n            return \"iconsmeteo/wi-storm-showers.svg\"\n        case 99:\n            return \"iconsmeteo/wi-thunderstorm.svg\"\n\n\ndef imgcodehournight(i):\n    \"\"\"\n    Association de chaques codes WBO à un pictogramme le correspondant. Retourne le chemin d'accès au pictogramme par une chaine de caractères. Version nuit.\n    \"\"\"\n    match codeimage[i]:\n        case 0:\n            return \"iconsmeteo/wi-night-clear.svg\"\n        case 1:\n            return \"iconsmeteo/wi-night-alt-partly-cloudy.svg\"\n        case 2:\n            return \"iconsmeteo/wi-night-alt-cloudy.svg\"\n        case 3:\n            return \"iconsmeteo/wi-cloud.svg\"\n        case 45 | 48:\n            return \"iconsmeteo/wi-fog.svg\"\n        case 51 | 53 | 55 | 56 | 57:\n            return \"iconsmeteo/wi-sprinkle.svg\"\n        case 61 | 81 | 82:\n            return \"iconsmeteo/wi-showers.svg\"\n        case 63:\n            return \"iconsmeteo/wi-rain-wind.svg\"\n        case 65 | 66 | 67:\n            return \"iconsmeteo/wi-rain.svg\"\n        case 71 | 73 | 75 | 85 | 86:\n            return \"iconsmeteo/wi-snow.svg\"\n        case 95 | 96:\n            return \"iconsmeteo/wi-storm-showers.svg\"\n        case 99:\n            return \"iconsmeteo/wi-thunderstorm.svg\"\n\n\ndef couleur(temp):\n    \"\"\"\n    Associe une couleur en fonction de la température sous le format RGB.\n    \"\"\"\n    if temp &lt;= 0:\n        return \"rgb(102, 183, 213,0.5)\"\n    if 0 &lt; temp &lt;= 5:\n        return \"rgb(85, 215, 195,0.5)\"\n    if 5 &lt; temp &lt;= 10:\n        return \"rgb(65, 220, 119,0.5)\"\n    if 10 &lt; temp &lt;= 15:\n        return \"rgb(82, 226, 38,0.5)\"\n    if 15 &lt; temp &lt;= 20:\n        return \"rgb(155, 227, 22,0.5)\"\n    if 20 &lt; temp &lt;= 25:\n        return \"rgb(216, 186, 12,0.5)\"\n    if 25 &lt; temp &lt;= 30:\n        return \"rgb(211, 113, 7,0.5)\"\n    if 30 &lt; temp &lt;= 35:\n        return \"rgb(204, 61, 4,0.5)\"\n    if 35 &lt; temp:\n        return \"rgb(201, 25, 2,0.5)\"\n\n\ndef cover(i):\n    \"\"\"\n    Retourne un gris plus ou moins opaque selon la couverture nuageuse\n    \"\"\"\n    return f\"rgb(169, 169, 169,{i/100})\"\n\n\ndef humid(i):\n    \"\"\"\n    Retourne un bleu plus ou moins opaque selon l'humidité'\n    \"\"\"\n    return f\"rgb(127,177,236,{i/100})\"\n\n\ndef goutte(i):\n    \"\"\"\n    Retourne une image sous format html correspondant a l'intensité des précipitations.\n    \"\"\"\n    if 0 &lt; pluie[i] &lt; 0.5:\n        return '&lt;img src=\"iconsmeteo/wi-raindrop.svg\" width=\"15\" height=\"15\" /&gt; &lt;br&gt;'\n    elif 0.5 &lt;= pluie[i]:\n        return '&lt;img src=\"iconsmeteo/wi-raindrops.svg\" width=\"25\" height=\"25\" /&gt; &lt;br&gt;'\n    else:\n        return \" - &lt;br&gt;\"\n\n\ndef imagecodetot(i):\n    if day &lt; i &lt;= night:\n        return imgcodehour(i)\n    else:\n        return imgcodehournight(i)\n\nfrom IPython.display import HTML\nfrom tabulate import tabulate\n\n\n# création du tableau en HTML pour pouvoir mettre les images et des couleurs\nres = f\"\"\"\n&lt;table class= \"table1-style\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;  \n        &lt;th  style=\"border-top-left-radius : 20px 20px\"&gt;    &lt;a class=lien href = index.qmd style=\"text-decoration:none\"&gt; {inttoday(0)}  &lt;br&gt; {date(0)} &lt;/a&gt;&lt;/th&gt;\n        &lt;th&gt;  00:00 &lt;/th&gt;\n        &lt;th&gt;  01:00 &lt;/th&gt;\n        &lt;th&gt;  02:00 &lt;/th&gt;\n        &lt;th&gt;  03:00 &lt;/th&gt;\n        &lt;th&gt;  04:00 &lt;/th&gt;\n        &lt;th&gt;  05:00 &lt;/th&gt;\n        &lt;th&gt;  06:00 &lt;/th&gt;\n        &lt;th&gt;  07:00 &lt;/th&gt;\n        &lt;th&gt;  08:00 &lt;/th&gt;\n        &lt;th&gt;  09:00 &lt;/th&gt;\n        &lt;th&gt;  10:00 &lt;/th&gt;\n        &lt;th&gt;  11:00 &lt;/th&gt;\n        &lt;th&gt;  12:00 &lt;/th&gt;\n        &lt;th&gt;  13:00 &lt;/th&gt;\n        &lt;th&gt;  14:00 &lt;/th&gt;\n        &lt;th&gt;  15:00 &lt;/th&gt;\n        &lt;th&gt;  16:00 &lt;/th&gt;\n        &lt;th&gt;  17:00 &lt;/th&gt;\n        &lt;th&gt;  18:00 &lt;/th&gt;\n        &lt;th&gt;  19:00 &lt;/th&gt;\n        &lt;th&gt;  20:00 &lt;/th&gt;\n        &lt;th&gt;  21:00 &lt;/th&gt;\n        &lt;th&gt;  22:00 &lt;/th&gt;\n        &lt;th  style=\"border-top-right-radius : 20px 20px\" &gt;  23:00&lt;/small&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  Pictogramme &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(0)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(1)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(2)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(3)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(4)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(5)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(6)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(7)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(8)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(9)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(10)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(11)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(12)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(13)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(14)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(15)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(16)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(17)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(18)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(19)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(20)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(21)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(22)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imagecodetot(23)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td HEIGHT=\"50\"&gt;  Température&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[0])}; font-weight: bold;\" &gt; {degres[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[1])};font-weight: bold;\" &gt; {degres[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[2])};font-weight: bold;\" &gt; {degres[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[3])};font-weight: bold;\" &gt; {degres[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[4])};font-weight: bold;\" &gt; {degres[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[5])};font-weight: bold;\" &gt; {degres[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[6])};font-weight: bold;\" &gt; {degres[6]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[7])};font-weight: bold;\" &gt; {degres[7]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[8])};font-weight: bold;\" &gt; {degres[8]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[9])};font-weight: bold;\" &gt; {degres[9]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[10])};font-weight: bold;\" &gt; {degres[10]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[11])};font-weight: bold;\" &gt; {degres[11]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[12])};font-weight: bold;\" &gt; {degres[12]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[13])};font-weight: bold;\" &gt; {degres[13]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[14])};font-weight: bold;\" &gt; {degres[14]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[15])};font-weight: bold;\" &gt; {degres[15]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[16])};font-weight: bold;\" &gt; {degres[16]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[17])};font-weight: bold;\" &gt; {degres[17]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[18])};font-weight: bold;\" &gt; {degres[18]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[19])};font-weight: bold;\" &gt; {degres[19]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[20])};font-weight: bold;\" &gt; {degres[20]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[21])};font-weight: bold;\" &gt; {degres[21]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[22])};font-weight: bold;\" &gt; {degres[22]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(degres[23])};font-weight: bold;\" &gt; {degres[23]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td HEIGHT=\"25\"&gt;  Ressenti&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[0])}; font-weight: bold;\" &gt; {ressenti[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[1])};font-weight: bold;\" &gt; {ressenti[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[2])};font-weight: bold;\" &gt; {ressenti[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[3])};font-weight: bold;\" &gt; {ressenti[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[4])};font-weight: bold;\" &gt; {ressenti[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[5])};font-weight: bold;\" &gt; {ressenti[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[6])};font-weight: bold;\" &gt; {ressenti[6]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[7])};font-weight: bold;\" &gt; {ressenti[7]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[8])};font-weight: bold;\" &gt; {ressenti[8]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[9])};font-weight: bold;\" &gt; {ressenti[9]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[10])};font-weight: bold;\" &gt; {ressenti[10]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[11])};font-weight: bold;\" &gt; {ressenti[11]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[12])};font-weight: bold;\" &gt; {ressenti[12]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[13])};font-weight: bold;\" &gt; {ressenti[13]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[14])};font-weight: bold;\" &gt; {ressenti[14]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[15])};font-weight: bold;\" &gt; {ressenti[15]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[16])};font-weight: bold;\" &gt; {ressenti[16]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[17])};font-weight: bold;\" &gt; {ressenti[17]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[18])};font-weight: bold;\" &gt; {ressenti[18]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[19])};font-weight: bold;\" &gt; {ressenti[19]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[20])};font-weight: bold;\" &gt; {ressenti[20]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[21])};font-weight: bold;\" &gt; {ressenti[21]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[22])};font-weight: bold;\" &gt; {ressenti[22]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(ressenti[23])};font-weight: bold;\" &gt; {ressenti[23]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Vitesse du vent &lt;/td&gt;\n        &lt;td&gt; {vent[0]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[1]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[2]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[3]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[4]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[5]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[6]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[7]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[8]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[9]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[10]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[11]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[12]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[13]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[14]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[15]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[16]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[17]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[18]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[19]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[20]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[21]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[22]}km/h &lt;/td&gt;\n        &lt;td&gt; {vent[23]}km/h &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Précipitations &lt;/td&gt;\n        &lt;td&gt; {goutte(0)} {pluie[0]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(1)} {pluie[1]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(2)} {pluie[2]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(3)} {pluie[3]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(4)} {pluie[4]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(5)} {pluie[5]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(6)} {pluie[6]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(7)} {pluie[7]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(8)} {pluie[8]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(9)} {pluie[9]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(10)} {pluie[10]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(11)} {pluie[11]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(12)} {pluie[12]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(13)} {pluie[13]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(14)} {pluie[14]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(15)} {pluie[15]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(16)} {pluie[16]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(17)} {pluie[17]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(18)} {pluie[18]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(19)} {pluie[19]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(20)} {pluie[20]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(21)} {pluie[21]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(22)} {pluie[22]}mm &lt;/td&gt;\n        &lt;td&gt; {goutte(23)} {pluie[23]}mm &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr style=\"background-color : white\"&gt; \n        &lt;td&gt; Humidité &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[0])}; font-weight: bold;\" &gt; {humidite[0]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[1])};font-weight: bold;\" &gt; {humidite[1]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[2])};font-weight: bold;\" &gt; {humidite[2]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[3])};font-weight: bold;\" &gt; {humidite[3]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[4])};font-weight: bold;\" &gt; {humidite[4]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[5])};font-weight: bold;\" &gt; {humidite[5]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[6])};font-weight: bold;\" &gt; {humidite[6]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[7])};font-weight: bold;\" &gt; {humidite[7]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[8])};font-weight: bold;\" &gt; {humidite[8]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[9])};font-weight: bold;\" &gt; {humidite[9]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[10])};font-weight: bold;\" &gt; {humidite[10]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[11])};font-weight: bold;\" &gt; {humidite[11]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[12])};font-weight: bold;\" &gt; {humidite[12]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[13])};font-weight: bold;\" &gt; {humidite[13]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[14])};font-weight: bold;\" &gt; {humidite[14]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[15])};font-weight: bold;\" &gt; {humidite[15]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[16])};font-weight: bold;\" &gt; {humidite[16]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[17])};font-weight: bold;\" &gt; {humidite[17]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[18])};font-weight: bold;\" &gt; {humidite[18]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[19])};font-weight: bold;\" &gt; {humidite[19]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[20])};font-weight: bold;\" &gt; {humidite[20]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[21])};font-weight: bold;\" &gt; {humidite[21]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[22])};font-weight: bold;\" &gt; {humidite[22]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {humid(humidite[23])};font-weight: bold;\" &gt; {humidite[23]}% &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr style=\"background-color : white\"&gt;\n        &lt;td  style=\"border-bottom-left-radius : 20px 20px\" HEIGHT=\"50\"&gt;  Couverture nuageuse&lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[0])}; font-weight: bold;\" &gt; {cloudcover[0]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[1])};font-weight: bold;\" &gt; {cloudcover[1]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[2])};font-weight: bold;\" &gt; {cloudcover[2]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[3])};font-weight: bold;\" &gt; {cloudcover[3]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[4])};font-weight: bold;\" &gt; {cloudcover[4]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[5])};font-weight: bold;\" &gt; {cloudcover[5]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[6])};font-weight: bold;\" &gt; {cloudcover[6]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[7])};font-weight: bold;\" &gt; {cloudcover[7]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[8])};font-weight: bold;\" &gt; {cloudcover[8]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[9])};font-weight: bold;\" &gt; {cloudcover[9]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[10])};font-weight: bold;\" &gt; {cloudcover[10]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[11])};font-weight: bold;\" &gt; {cloudcover[11]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[12])};font-weight: bold;\" &gt; {cloudcover[12]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[13])};font-weight: bold;\" &gt; {cloudcover[13]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[14])};font-weight: bold;\" &gt; {cloudcover[14]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[15])};font-weight: bold;\" &gt; {cloudcover[15]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[16])};font-weight: bold;\" &gt; {cloudcover[16]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[17])};font-weight: bold;\" &gt; {cloudcover[17]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[18])};font-weight: bold;\" &gt; {cloudcover[18]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[19])};font-weight: bold;\" &gt; {cloudcover[19]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[20])};font-weight: bold;\" &gt; {cloudcover[20]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[21])};font-weight: bold;\" &gt; {cloudcover[21]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[22])};font-weight: bold;\" &gt; {cloudcover[22]}% &lt;/td&gt;\n        &lt;td style =\" background-color : {cover(cloudcover[23])};font-weight: bold;border-bottom-right-radius : 20px 20px\" &gt; {cloudcover[23]}% &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n\n&lt;/table&gt;\n\"\"\"\nHTML(res)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMardi\n12-3\n00:00\n01:00\n02:00\n03:00\n04:00\n05:00\n06:00\n07:00\n08:00\n09:00\n10:00\n11:00\n12:00\n13:00\n14:00\n15:00\n16:00\n17:00\n18:00\n19:00\n20:00\n21:00\n22:00\n23:00\n\n\n\n\nPictogramme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTempérature\n10.9°C\n10.6°C\n10.5°C\n10.7°C\n10.7°C\n10.0°C\n10.7°C\n11.2°C\n12.5°C\n14.4°C\n15.7°C\n15.9°C\n16.8°C\n17.4°C\n17.3°C\n17.5°C\n17.3°C\n16.3°C\n14.9°C\n14.1°C\n13.5°C\n12.8°C\n11.7°C\n11.3°C\n\n\nRessenti\n7.2°C\n6.7°C\n5.9°C\n7.2°C\n6.5°C\n6.4°C\n6.6°C\n7.2°C\n8.4°C\n9.7°C\n11.3°C\n11.3°C\n12.4°C\n13.1°C\n12.4°C\n13.0°C\n13.6°C\n12.9°C\n11.3°C\n10.5°C\n10.5°C\n10.2°C\n9.1°C\n8.3°C\n\n\nVitesse du vent\n14.8km/h\n14.3km/h\n19.8km/h\n13.6km/h\n18.0km/h\n14.5km/h\n16.6km/h\n15.8km/h\n17.2km/h\n20.1km/h\n17.1km/h\n20.4km/h\n17.7km/h\n17.6km/h\n21.8km/h\n17.4km/h\n13.7km/h\n13.5km/h\n14.7km/h\n13.4km/h\n9.4km/h\n6.8km/h\n7.1km/h\n9.7km/h\n\n\nPrécipitations\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n-\n0.0mm\n\n\nHumidité\n61%\n56%\n58%\n61%\n58%\n65%\n59%\n55%\n53%\n44%\n39%\n41%\n37%\n36%\n37%\n34%\n36%\n43%\n47%\n47%\n49%\n52%\n56%\n58%\n\n\nCouverture nuageuse\n0%\n0%\n100%\n100%\n0%\n99%\n5%\n82%\n100%\n0%\n0%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%\n100%"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Météo Montpellier",
    "section": "",
    "text": "Dérouler le code\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport requests\nimport datetime\nimport pooch\nimport PIL as Image\nimport statistics\nfrom dateutil.relativedelta import relativedelta\n\n# initialisation des dates de debut et fin d'extraction de données\nstart_date = datetime.datetime.now() - relativedelta(days=2)\nend_date = start_date + relativedelta(days=6)\n# formatage des dates pour importer le bon URL\ndebut = \"\"\nif start_date.month &lt; 10 and start_date.day &lt; 10:\n    debut = f\"{start_date.year}-0{start_date.month}-0{start_date.day}\"\nelif start_date.day &lt; 10:\n    debut = f\"{start_date.year}-{start_date.month}-0{start_date.day}\"\nelif start_date.month &lt; 10:\n    debut = f\"{start_date.year}-0{start_date.month}-{start_date.day}\"\nelse:\n    debut = f\"{start_date.year}-{start_date.month}-{start_date.day}\"\n\n\nfin = \"\"\nif end_date.month &lt; 10 and end_date.day &lt; 10:\n    fin = f\"{end_date.year}-0{end_date.month}-0{end_date.day}\"\nelif end_date.day &lt; 10:\n    fin = f\"{end_date.year}-{end_date.month}-0{end_date.day}\"\nelif start_date.month &lt; 10:\n    fin = f\"{end_date.year}-0{end_date.month}-{end_date.day}\"\nelse:\n    fin = f\"{end_date.year}-{end_date.month}-{end_date.day}\"\n\n# copie de l'URL du site open-meteo avec les differents critères qui nous interessent\nurl = f\"https://api.open-meteo.com/v1/meteofrance?latitude=43.6109&longitude=3.8763&hourly=temperature_2m,weathercode,precipitation,windspeed_10m&daily=weathercode,temperature_2m_max,temperature_2m_min,precipitation_sum&timezone=Europe%2FLondon&start_date={debut}&end_date={fin}\"\n\n# récuperation des données\nresponse = requests.get(url)\ndata = response.json()\n\n# initialisation des tableaux de données que nous allons utiliser\ndegres = data[\"hourly\"][\"temperature_2m\"]\nsumpluie = data[\"daily\"][\"precipitation_sum\"]\nvent = data[\"hourly\"][\"windspeed_10m\"]\ncodeimage = data[\"hourly\"][\"weathercode\"]\ncodeimagetot = data[\"daily\"][\"weathercode\"]\nmintemp = data[\"daily\"][\"temperature_2m_min\"]\nmaxtemp = data[\"daily\"][\"temperature_2m_max\"]\npluie = data[\"hourly\"][\"precipitation\"]\n\n\npluie5 = 0 #pour gérer les données pas encore enregistrées\nfor i in range(len(pluie)):\n    if pluie[i] == None:\n        pluie[i] = 0\nfor i in range(24):\n    pluie5 += pluie[-24+i] #somme de la pluie des 24 heures du dernier jour\n\n# vent moyen pour chaques jours\ntabvent = np.zeros((7, 24))\nmoyvent = np.zeros(7)\nk = 0\nfor i in range(7):\n    for j in range(24):\n        if vent[k] == None:\n            tabvent[i, j] = tabvent[\n                i, j - 1\n            ]  # fausse le moins les résultats selon mes tests\n        else:\n            tabvent[i, j] = vent[k]\n        k += 1\n\nfor i in range(7):\n    moyvent[i] = round(\n        statistics.mean(tabvent[i]), 0\n    )  # on ne garde pas de chiffres après la virgule car vue générale\n\n\n\ndef inttoday(i):\n    \"\"\"\n    fonction permettant d'obtenir le nom du jour des jours de la semaine automatiquement, correspond à la première ligne du tableau.\n    \"\"\"\n    if (datetime.datetime.now().weekday() + i) % 7 == 0:\n        return \"Lundi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 1:\n        return \"Mardi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 2:\n        return \"Mercredi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 3:\n        return \"Jeudi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 4:\n        return \"Vendredi\"\n    elif (datetime.datetime.now().weekday() + i) % 7 == 5:\n        return \"Samedi\"\n    else:\n        return \"Dimanche\"\n\n\ndef date(i):\n    \"\"\"\n    Retourne une chaine de caractères correspondant au jour i, i étant l'offset de jour par rapport au présent.\n    \"\"\"\n    date = datetime.datetime.now() + relativedelta(days=i)\n    return f\"{date.day}-{date.month}\"\n\n\ndef imgcode(i):\n    \"\"\"\n    Association de chaque code WBO à un pictogramme le correspondant. Retourne le chemin d'accès au pictogramme par une chaine de caractères. Version hourly.\n    \"\"\"\n    if medcode[i] == 0:\n        return \"iconsmeteo/Sun-thin.svg\"\n    elif medcode[i] == 1 or medcode[i] == 2:\n        return \"iconsmeteo/PartlySunny-thin.svg\"\n    elif medcode[i] == 3:\n        return \"iconsmeteo/Cloud-thin.svg\"\n    elif 45 &lt;= medcode[i] &lt;= 57:\n        return \"iconsmeteo/Haze-thin.svg\"\n    elif 61 &lt;= medcode[i] &lt;= 67 or 80 &lt;= medcode[i] &lt;= 82:\n        return \"iconsmeteo/Rain-thin.svg\"\n    elif 71 &lt;= medcode[i] &lt;= 77 or 85 &lt;= medcode[i] &lt;= 86:\n        return \"iconsmeteo/Snow-thin.svg\"\n    elif 95 &lt;= medcode[i] &lt;= 99:\n        return \"iconsmeteo/Storm-thin.svg\"\n\n\ndef imgcodeday(i):\n    \"\"\"\n    Association de chaques codes WBO à un pictogramme le correspondant. Retourne le chemin d'accès au pictogramme par une chaine de caractères. Version daily.\n    \"\"\"\n    match codeimagetot[i]:\n        case 0:\n            return \"iconsmeteo/wi-day-sunny.svg\"\n        case 1:\n            return \"iconsmeteo/wi-day-sunny-overcast.svg\"\n        case 2:\n            return \"iconsmeteo/wi-day-cloudy.svg\"\n        case 3:\n            return \"iconsmeteo/wi-cloud.svg\"\n        case 45 | 48:\n            return \"iconsmeteo/wi-fog.svg\"\n        case 51 | 53 | 55 | 56 | 57:\n            return \"iconsmeteo/wi-sprinkle.svg\"\n        case 61 | 81 | 82:\n            return \"iconsmeteo/wi-showers.svg\"\n        case 63:\n            return \"iconsmeteo/wi-rain-wind.svg\"\n        case 65 | 66 | 67:\n            return \"iconsmeteo/wi-rain.svg\"\n        case 71 | 73 | 75 | 85 | 86:\n            return \"iconsmeteo/wi-snow.svg\"\n        case 95 | 96:\n            return \"iconsmeteo/wi-storm-showers.svg\"\n        case 99:\n            return \"iconsmeteo/wi-thunderstorm.svg\"\n        case _:  # si on a pas encore d'informations j'ai juste mis un cercle\n            return \"iconsmeteo/wi-moon-new.svg\"\n\n\ndef couleur(temp):\n    \"\"\"\n    Associe une couleur en fonction de la température sous le format RGB.\n    \"\"\"\n    if temp == None:\n        return \"rgb(255, 255, 255,0.5)\"\n    if temp &lt;= 0:\n        return \"rgb(102, 183, 213,0.5)\"\n    if 0 &lt; temp &lt;= 5:\n        return \"rgb(85, 215, 195,0.5)\"\n    if 5 &lt; temp &lt;= 10:\n        return \"rgb(65, 220, 119,0.5)\"\n    if 10 &lt; temp &lt;= 15:\n        return \"rgb(82, 226, 38,0.5)\"\n    if 15 &lt; temp &lt;= 20:\n        return \"rgb(155, 227, 22,0.5)\"\n    if 20 &lt; temp &lt;= 25:\n        return \"rgb(216, 186, 12,0.5)\"\n    if 25 &lt; temp &lt;= 30:\n        return \"rgb(211, 113, 7,0.5)\"\n    if 30 &lt; temp &lt;= 35:\n        return \"rgb(204, 61, 4,0.5)\"\n    if 35 &lt; temp:\n        return \"rgb(201, 25, 2,0.5)\"\n    else:\n        return \"rgb(188, 212,204,0.5)\"\n\n\ndef goutte(i):\n    \"\"\"\n    Retourne une image sous format html correspondant a l'intensité des précipitations.\n    \"\"\"\n    if sumpluie[i] != float:\n        return \"\"\n    if 0 &lt; sumpluie[i] &lt;= 2:\n        return '&lt;img src=\"iconsmeteo/wi-raindrop.svg\" width=\"20\" height=\"20\" /&gt;'\n    elif 2 &lt; sumpluie[i]:\n        return '&lt;img src=\"iconsmeteo/wi-raindrops.svg\" width=\"40\" height=\"40\" /&gt;'\n    else:\n        return \"\"\n\nfrom IPython.display import HTML\nfrom tabulate import tabulate\n\n# création du tableau en HTML pour pouvoir mettre les images et des couleurs\nres = f\"\"\"\n&lt;table class= \"table1-style\"&gt;\n    &lt;thead&gt;\n    &lt;tr&gt;  \n        &lt;th  style=\"border-top-left-radius : 20px 20px\"&gt; Jours &lt;/th&gt;\n        &lt;th&gt;  {inttoday(-2)} &lt;br&gt; &lt;small&gt; {date(-2)} &lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  Hier &lt;br&gt; &lt;small&gt;{date(-1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th style=\"border-top:3px solid rgb(85, 215, 195,0.5);border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt;   &lt;a class=lien href = plus.qmd style=\"text-decoration:none\"&gt; Aujourd'hui &lt;br&gt; &lt;small&gt;{date(0)}&lt;/small&gt; &lt;/a&gt;&lt;/th&gt;\n        &lt;th&gt;  Demain &lt;br&gt; &lt;small&gt;{date(1)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {inttoday(2)} &lt;br&gt; &lt;small&gt;{date(2)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th&gt;  {inttoday(3)} &lt;br&gt; &lt;small&gt;{date(3)}&lt;/small&gt;&lt;/th&gt;\n        &lt;th  style=\"border-top-right-radius : 20px 20px\" &gt;  {inttoday(4)} &lt;br&gt; &lt;small&gt;{date(4)}&lt;/small&gt;&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  Pictogramme&lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(0)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(1)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td style=\"border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; &lt;img src={imgcodeday(2)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(3)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(4)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(5)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n        &lt;td&gt; &lt;img src={imgcodeday(6)} width=\"50\"\n  height=\"50\" /&gt; &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt;  Température maximale&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[0])}; font-weight: bold;\" &gt; {maxtemp[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[1])};font-weight: bold;\" &gt; {maxtemp[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[2])};font-weight: bold;border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\" &gt; {maxtemp[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[3])};font-weight: bold;\" &gt; {maxtemp[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[4])};font-weight: bold;\" &gt; {maxtemp[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[5])};font-weight: bold;\" &gt; {maxtemp[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(maxtemp[6])};font-weight: bold;\" &gt; {maxtemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr &gt; \n        &lt;td&gt;  Température minimale&lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[0])};font-weight: bold;\" &gt; {mintemp[0]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[1])};font-weight: bold;\" &gt; {mintemp[1]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[2])};font-weight: bold;border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\" &gt; {mintemp[2]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[3])};font-weight: bold;\" &gt; {mintemp[3]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[4])};font-weight: bold;\" &gt; {mintemp[4]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[5])};font-weight: bold;\" &gt; {mintemp[5]}°C &lt;/td&gt;\n        &lt;td style =\" background-color : {couleur(mintemp[6])};font-weight: bold;\" &gt; {mintemp[6]}°C &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td&gt; Vitesse moyenne du vent &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[0])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[1])} km/h &lt;/td&gt;\n        &lt;td style=\"border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; {int(moyvent[2])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[3])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[4])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[5])} km/h &lt;/td&gt;\n        &lt;td&gt; {int(moyvent[6])} km/h &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt; \n        &lt;td style=\"border-bottom-left-radius : 20px 20px\"&gt; Précipitations &lt;/td&gt;\n        &lt;td&gt; {goutte(0)} {sumpluie[0]} mm &lt;/td&gt;\n        &lt;td&gt; {goutte(1)} {sumpluie[1]} mm &lt;/td&gt;\n        &lt;td style=\"border-bottom:3px solid rgb(85, 215, 195,0.5);border-right:3px solid rgb(85, 215, 195,0.5);border-left:3px solid rgb(85, 215, 195,0.5)\"&gt; {goutte(2)} {sumpluie[2]} mm &lt;/td&gt;\n        &lt;td&gt; {goutte(3)} {sumpluie[3]} mm &lt;/td&gt;\n        &lt;td&gt; {goutte(4)} {sumpluie[4]} mm &lt;/td&gt;\n        &lt;td&gt; {goutte(5)} {sumpluie[5]} mm &lt;/td&gt;\n        &lt;td style=\"border-bottom-right-radius : 20px 20px\"&gt; {goutte(6)} {pluie5} mm &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/tbody&gt;\n\n&lt;/table&gt;\n\"\"\"\nHTML(res)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJours\nDimanche\n10-3\nHier\n11-3\nAujourd'hui\n12-3\nDemain\n13-3\nJeudi\n14-3\nVendredi\n15-3\nSamedi\n16-3\n\n\n\n\nPictogramme\n\n\n\n\n\n\n\n\n\nTempérature maximale\n16.2°C\n14.5°C\n17.5°C\n20.0°C\n15.3°C\n16.3°C\n19.1°C\n\n\nTempérature minimale\n8.0°C\n8.4°C\n10.0°C\n8.5°C\n8.8°C\n10.8°C\n8.8°C\n\n\nVitesse moyenne du vent\n10 km/h\n16 km/h\n15 km/h\n8 km/h\n8 km/h\n10 km/h\n6 km/h\n\n\nPrécipitations\n0.7 mm\n0.1 mm\n0.0 mm\n0.0 mm\n0.0 mm\n0.2 mm\n0.0 mm"
  }
]